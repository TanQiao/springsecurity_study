<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
    <http pattern="/login.jsp*" security="none"/>
    <http>
        <intercept-url pattern="/**" access="ROLE_ADMIN"/>
        <form-login login-page='/login.jsp' default-target-url="/target.jsp" always-use-default-target="true"/>
    </http>
    <!--<authentication-manager>
           <authentication-provider>
                  <user-service>
                         <user name="jimi" password="jimi" authorities="ROLE_USER, ROLE_ADMIN" />
                         <user name="bob" password="bob" authorities="ROLE_USER" />
                  </user-service>
           </authentication-provider>
    </authentication-manager>-->
    <authentication-manager>
           <authentication-provider user-service-ref='myUserDetailsService'>
               <password-encoder hash="md5"></password-encoder>
           </authentication-provider>
    </authentication-manager>
    <!--<authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select U.username as username,U.password as password,U.accountEnabled AS 'enabled' from user U where U.username=?"
                               authorities-by-username-query="select c.username,r.name as authority from role r,(select * from user u,user_role ur where u.id = ur.user_id) c where c.role_id = r.id and c.username = ?;"/>
        </authentication-provider>
    </authentication-manager>-->
</beans:beans>